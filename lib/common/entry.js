"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InlineJSAnimation = void 0;
const inlinejs_1 = require("@benbraide/inlinejs");
const concept_1 = require("./concept");
const back_1 = require("./easing/back");
const bounce_1 = require("./easing/bounce");
const circle_1 = require("./easing/circle");
const cubic_1 = require("./easing/cubic");
const elastic_1 = require("./easing/elastic");
const exponential_1 = require("./easing/exponential");
const quadratic_1 = require("./easing/quadratic");
const quart_1 = require("./easing/quart");
const quint_1 = require("./easing/quint");
const sine_1 = require("./easing/sine");
const default_1 = require("./easing/default");
const linear_1 = require("./easing/linear");
const snap_1 = require("./easing/snap");
const default_2 = require("./actors/default");
const null_1 = require("./actors/null");
const opacity_1 = require("./actors/opacity");
const width_1 = require("./actors/scale/width");
const height_1 = require("./actors/scale/height");
const zoom_1 = require("./actors/scale/zoom");
const slide_down_1 = require("./actors/translate/slide-down");
const slide_left_1 = require("./actors/translate/slide-left");
const slide_right_1 = require("./actors/translate/slide-right");
const slide_up_1 = require("./actors/translate/slide-up");
const spin_1 = require("./actors/rotate/spin");
const flip_1 = require("./actors/rotate/flip");
const toss_1 = require("./actors/rotate/toss");
const pulse_1 = require("./actors/scene/pulse");
const heartbeat_1 = require("./actors/scene/heartbeat");
const bezier_1 = require("./creators/bezier");
const scale_1 = require("./creators/scale");
const translate_1 = require("./creators/translate");
const rotate_1 = require("./creators/rotate");
const scene_1 = require("./creators/scene");
const shake_1 = require("./creators/shake");
const vibrate_1 = require("./creators/vibrate");
const rubberband_1 = require("./creators/rubberband");
const jello_1 = require("./creators/jello");
const tada_1 = require("./creators/tada");
const swing_1 = require("./creators/swing");
const transition_1 = require("./directive/transition");
const animate_1 = require("./directive/animate");
const animation_1 = require("./magic/animation");
const act_1 = require("./components/act");
const animation_2 = require("./components/animation");
const collect_1 = require("./components/collect");
const content_1 = require("./components/content");
const null_2 = require("./components/null");
const opacity_2 = require("./components/opacity");
const rotate_2 = require("./components/rotate");
const scale_2 = require("./components/scale");
const scene_2 = require("./components/scene");
const shared_1 = require("./components/shared");
const slice_1 = require("./components/slice");
const translate_2 = require("./components/translate");
const shake_2 = require("./components/shake");
const vibrate_2 = require("./components/vibrate");
const pulse_2 = require("./components/pulse");
const heartbeat_2 = require("./components/heartbeat");
const jello_2 = require("./components/jello");
const rubberband_2 = require("./components/rubberband");
const swing_2 = require("./components/swing");
const tada_2 = require("./components/tada");
const transition_2 = require("./components/transition");
const ease_1 = require("./components/ease");
const bezier_2 = require("./components/bezier");
const composite_ease_1 = require("./components/composite-ease");
function InlineJSAnimation() {
    (0, inlinejs_1.WaitForGlobal)().then(() => {
        let concept = new concept_1.AnimationConcept(), easings = concept.GetEaseCollection(), actors = concept.GetActorCollection(), creators = concept.GetCreatorCollection();
        let addEase = (info) => easings.Add(info.callback, info.name);
        let addActor = (info) => actors.Add(info.callback, info.name);
        let addCreator = (name, callback) => creators.Add(name, callback);
        addEase(back_1.BackAnimationEase);
        addEase(back_1.BackInAnimationEase);
        addEase(back_1.BackOutAnimationEase);
        addEase(back_1.BackInOutAnimationEase);
        addEase(bounce_1.BounceAnimationEase);
        addEase(bounce_1.BounceInAnimationEase);
        addEase(bounce_1.BounceOutAnimationEase);
        addEase(bounce_1.BounceInOutAnimationEase);
        addEase(circle_1.CircleAnimationEase);
        addEase(circle_1.CircleInAnimationEase);
        addEase(circle_1.CircleOutAnimationEase);
        addEase(circle_1.CircleInOutAnimationEase);
        addEase(cubic_1.CubicAnimationEase);
        addEase(cubic_1.CubicInAnimationEase);
        addEase(cubic_1.CubicOutAnimationEase);
        addEase(cubic_1.CubicInOutAnimationEase);
        addEase(elastic_1.ElasticAnimationEase);
        addEase(elastic_1.ElasticInAnimationEase);
        addEase(elastic_1.ElasticOutAnimationEase);
        addEase(elastic_1.ElasticInOutAnimationEase);
        addEase(exponential_1.ExponentialAnimationEase);
        addEase(exponential_1.ExponentialInAnimationEase);
        addEase(exponential_1.ExponentialOutAnimationEase);
        addEase(exponential_1.ExponentialInOutAnimationEase);
        addEase(quadratic_1.QuadraticAnimationEase);
        addEase(quadratic_1.QuadraticInAnimationEase);
        addEase(quadratic_1.QuadraticOutAnimationEase);
        addEase(quadratic_1.QuadraticInOutAnimationEase);
        addEase(quart_1.QuartAnimationEase);
        addEase(quart_1.QuartInAnimationEase);
        addEase(quart_1.QuartOutAnimationEase);
        addEase(quart_1.QuartInOutAnimationEase);
        addEase(quint_1.QuintAnimationEase);
        addEase(quint_1.QuintInAnimationEase);
        addEase(quint_1.QuintOutAnimationEase);
        addEase(quint_1.QuintInOutAnimationEase);
        addEase(sine_1.SineAnimationEase);
        addEase(sine_1.SineInAnimationEase);
        addEase(sine_1.SineOutAnimationEase);
        addEase(sine_1.SineInOutAnimationEase);
        addEase(default_1.DefaultAnimationEase);
        addEase(linear_1.LinearAnimationEase);
        addEase(snap_1.SnapAnimationEase);
        addActor(default_2.DefaultAnimationActor);
        addActor(null_1.NullAnimationActor);
        addActor(opacity_1.OpacityAnimationActor);
        addActor(width_1.WidthAnimationActor);
        addActor(height_1.HeightAnimationActor);
        addActor(zoom_1.ZoomAnimationActor);
        addActor(slide_down_1.SlideDownAnimationActor);
        addActor(slide_left_1.SlideLeftAnimationActor);
        addActor(slide_right_1.SlideRightAnimationActor);
        addActor(slide_up_1.SlideUpAnimationActor);
        addActor(spin_1.SpinAnimationActor);
        addActor(flip_1.FlipAnimationActor);
        addActor(toss_1.TossAnimationActor);
        addActor(pulse_1.PulseAnimationActor);
        addActor(heartbeat_1.HeartbeatAnimationActor);
        addCreator('bezier', bezier_1.BezierAnimationEaseCreator);
        addCreator('scale', scale_1.ScaleAnimationCreator);
        addCreator('translate', translate_1.TranslateAnimationCreator);
        addCreator('rotate', rotate_1.RotateAnimationCreator);
        addCreator('scene', scene_1.SceneAnimationCreator);
        addCreator('shake', shake_1.ShakeAnimationCreator);
        addCreator('vibrate', vibrate_1.VibrateAnimationCreator);
        addCreator('rubberband', rubberband_1.RubberbandAnimationCreator);
        addCreator('jello', jello_1.JelloAnimationCreator);
        addCreator('tada', tada_1.TadaAnimationCreator);
        addCreator('swing', swing_1.SwingAnimationCreator);
        (0, inlinejs_1.GetGlobal)().SetConcept('animation', concept);
        (0, transition_1.TransitionDirectiveHandlerCompact)();
        (0, animate_1.AnimateDirectiveHandlerCompact)();
        (0, animation_1.AnimationMagicHandlerCompact)();
        (0, act_1.AnimationSceneActElementCompact)();
        (0, animation_2.AnimationElementCompact)();
        (0, collect_1.AnimationCollectElementCompact)();
        (0, content_1.AnimateContentElementCompact)();
        (0, null_2.AnimationNullElementCompact)();
        (0, opacity_2.AnimationOpacityElementCompact)();
        (0, rotate_2.AnimationRotateElementCompact)();
        (0, scale_2.AnimationScaleElementCompact)();
        (0, scene_2.AnimationSceneElementCompact)();
        (0, shared_1.AnimationSharedElementCompact)();
        (0, slice_1.AnimationSliceElementCompact)();
        (0, translate_2.AnimationTranslateElementCompact)();
        (0, shake_2.AnimationShakeElementCompact)();
        (0, vibrate_2.AnimationVibrateElementCompact)();
        (0, pulse_2.AnimationPulseElementCompact)();
        (0, heartbeat_2.AnimationHeartbeatElementCompact)();
        (0, jello_2.AnimationJelloElementCompact)();
        (0, rubberband_2.AnimationRubberbandElementCompact)();
        (0, swing_2.AnimationSwingElementCompact)();
        (0, tada_2.AnimationTadaElementCompact)();
        (0, transition_2.TransitionElementCompact)();
        (0, ease_1.EaseElementCompact)();
        (0, bezier_2.EaseBezierElementCompact)();
        (0, composite_ease_1.CompositeEaseElementCompact)();
    });
}
exports.InlineJSAnimation = InlineJSAnimation;
